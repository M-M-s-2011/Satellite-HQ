[{"/Users/navyaramagiri/GHA-SrPhase/Satellite-HQ/src/index.js":"1","/Users/navyaramagiri/GHA-SrPhase/Satellite-HQ/src/App.js":"2","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/index.js":"3","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/App.js":"4","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/db.js":"5","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/Login.js":"6","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/Game.js":"7","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/LoginFunctions.js":"8","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/Google-Login.js":"9"},{"size":197,"mtime":1611939832908,"results":"10","hashOfConfig":"11"},{"size":121,"mtime":1611939899891,"results":"12","hashOfConfig":"11"},{"size":263,"mtime":1612038373925,"results":"13","hashOfConfig":"14"},{"size":383,"mtime":1612056132416,"results":"15","hashOfConfig":"14"},{"size":503,"mtime":1612047081322,"results":"16","hashOfConfig":"14"},{"size":1422,"mtime":1612055907770,"results":"17","hashOfConfig":"14"},{"size":6838,"mtime":1612038722861,"results":"18","hashOfConfig":"14"},{"size":2394,"mtime":1612056103547,"results":"19","hashOfConfig":"14"},{"size":1109,"mtime":1612055819278,"results":"20","hashOfConfig":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18c1nxz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1aft9xu",{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},"/Users/navyaramagiri/GHA-SrPhase/Satellite-HQ/src/index.js",[],"/Users/navyaramagiri/GHA-SrPhase/Satellite-HQ/src/App.js",[],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/index.js",[],["44","45"],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/App.js",["46","47","48"],"import React from \"react\";\nimport Game from \"./components/Game\";\nimport db from \"./db\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Login from \"./components/LoginFunctions\";\nimport GoogleLogin from \"./components/Google-Login\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/db.js",[],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/Login.js",[],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/Game.js",["49"],"import React from \"react\";\nimport Phaser from \"phaser\";\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.game = null;\n\n    this.gameInit = this.gameInit.bind(this);\n    this.preload = this.preload.bind(this);\n    this.update = this.update.bind(this);\n    this.create = this.create.bind(this);\n\n    this.map = null;\n    this.cursors = null;\n    this.debugGraphics = null;\n    this.helpText = null;\n    this.player = null;\n    this.showDebug = false;\n    this.currentTileset = 1;\n  }\n\n  gameInit() {\n    var config = {\n      type: Phaser.WEBGL,\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"#2d2d2d\",\n      parent: \"phaser\",\n      pixelArt: true,\n      physics: {\n        default: \"arcade\",\n        arcade: { gravity: { y: 0 } },\n      },\n      scene: {\n        // Gets called by Phaser after init(). It is used to load assets\n        preload: this.preload(),\n        // Gets called by Phaser after init() and preload(). It is used to create your game objects\n        create: this.create(),\n        // Gets called by Phaser on each step or frame in the game\n        update: this.update(),\n      },\n    };\n\n    this.game = new Phaser.Game(config);\n  }\n\n  preload() {\n    // We store the Component's this to access it in the scene\n    const self = this;\n    return function () {\n      this.load.image(\"tiles\", \"assets/catastrophi_tiles_16.png\");\n      this.load.image(\"tiles_red\", \"assets/catastrophi_tiles_16_red.png\");\n      this.load.image(\"tiles_blue\", \"assets/catastrophi_tiles_16_blue.png\");\n      this.load.tilemapCSV(\"map\", \"assets/catastrophi_level2.csv\");\n      this.load.spritesheet(\"player\", \"assets/spaceman.png\", {\n        frameWidth: 16,\n        frameHeight: 16,\n      });\n    };\n  }\n\n  create() {\n    const self = this;\n    return function (data) {\n      function updateHelpText() {\n        self.helpText.setText(\n          \"Arrow keys to move.\" +\n            \"\\nPress 1/2/3 to change the tileset texture.\" +\n            \"\\nCurrent texture: \" +\n            self.currentTileset\n        );\n      }\n\n      function drawDebug() {\n        self.debugGraphics.clear();\n\n        if (self.showDebug) {\n          // Pass in null for any of the style options to disable drawing that component\n          self.map.renderDebug(self.debugGraphics, {\n            tileColor: null, // Non-colliding tiles\n            collidingTileColor: new Phaser.Display.Color(243, 134, 48, 200), // Colliding tiles\n            faceColor: new Phaser.Display.Color(40, 39, 37, 255), // Colliding face edges\n          });\n        }\n\n        updateHelpText();\n      }\n\n      // When loading a CSV map, make sure to specify the tileWidth and tileHeight\n      self.map = this.make.tilemap({\n        key: \"map\",\n        tileWidth: 16,\n        tileHeight: 16,\n      });\n      var tileset = self.map.addTilesetImage(\"tiles_red\");\n      var layer = self.map.createLayer(0, tileset, 0, 0);\n      layer.setScale(2);\n\n      //  This isn't totally accurate, but it'll do for now\n      self.map.setCollisionBetween(54, 83);\n\n      this.input.keyboard.on(\n        \"keydown-ONE\",\n        function (event) {\n          var texture = this.sys.textures.get(\"tiles_red\");\n          self.currentTileset = 1;\n          tileset.setImage(texture);\n          updateHelpText();\n        },\n        this\n      );\n\n      this.input.keyboard.on(\n        \"keydown-TWO\",\n        function (event) {\n          var texture = this.sys.textures.get(\"tiles_blue\");\n          self.currentTileset = 2;\n          tileset.setImage(texture);\n          updateHelpText();\n        },\n        this\n      );\n\n      this.input.keyboard.on(\n        \"keydown-THREE\",\n        function (event) {\n          var texture = this.sys.textures.get(\"tiles\");\n          self.currentTileset = 3;\n          tileset.setImage(texture);\n          updateHelpText();\n        },\n        this\n      );\n\n      this.anims.create({\n        key: \"left\",\n        frames: this.anims.generateFrameNumbers(\"player\", { start: 8, end: 9 }),\n        frameRate: 10,\n        repeat: -1,\n      });\n      this.anims.create({\n        key: \"right\",\n        frames: this.anims.generateFrameNumbers(\"player\", { start: 1, end: 2 }),\n        frameRate: 10,\n        repeat: -1,\n      });\n      this.anims.create({\n        key: \"up\",\n        frames: this.anims.generateFrameNumbers(\"player\", {\n          start: 11,\n          end: 13,\n        }),\n        frameRate: 10,\n        repeat: -1,\n      });\n      this.anims.create({\n        key: \"down\",\n        frames: this.anims.generateFrameNumbers(\"player\", { start: 4, end: 6 }),\n        frameRate: 10,\n        repeat: -1,\n      });\n\n      self.player = this.physics.add.sprite(100, 100, \"player\", 1).setScale(2);\n      self.player.setSize(10, 10, false);\n\n      // Set up the player to collide with the tilemap layer. Alternatively, you can manually run\n      // collisions in update via: this.physics.world.collide(player, layer).\n      this.physics.add.collider(self.player, layer);\n\n      this.cameras.main.setBounds(\n        0,\n        0,\n        self.map.widthInPixels,\n        self.map.heightInPixels\n      );\n      this.cameras.main.startFollow(self.player);\n\n      self.debugGraphics = this.add.graphics();\n\n      this.input.keyboard.on(\"down_67\", function (event) {\n        self.showDebug = !self.showDebug;\n        drawDebug();\n      });\n\n      self.cursors = this.input.keyboard.createCursorKeys();\n\n      self.helpText = this.add.text(16, 16, \"\", {\n        fontSize: \"20px\",\n        fill: \"#ffffff\",\n      });\n      self.helpText.setScrollFactor(0);\n      updateHelpText();\n    };\n  }\n\n  update() {\n    const self = this;\n    return function (time, delta) {\n      self.player.body.setVelocity(0);\n      // Horizontal movement\n      if (self.cursors.left.isDown) {\n        self.player.body.setVelocityX(-200);\n      } else if (self.cursors.right.isDown) {\n        self.player.body.setVelocityX(200);\n      }\n      // Vertical movement\n      if (self.cursors.up.isDown) {\n        self.player.body.setVelocityY(-200);\n      } else if (self.cursors.down.isDown) {\n        self.player.body.setVelocityY(200);\n      }\n      // Update the animation last and give left/right animations precedence over up/down animations\n      if (self.cursors.left.isDown) {\n        self.player.anims.play(\"left\", true);\n      } else if (self.cursors.right.isDown) {\n        self.player.anims.play(\"right\", true);\n      } else if (self.cursors.up.isDown) {\n        self.player.anims.play(\"up\", true);\n      } else if (self.cursors.down.isDown) {\n        self.player.anims.play(\"down\", true);\n      } else {\n        self.player.anims.stop();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.gameInit();\n  }\n\n  componentDidUpdate(prevState, prevProps) {}\n\n  render() {\n    // Phaser target element\n    return <div id=\"phaser\"></div>;\n  }\n}\n","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/LoginFunctions.js",["50","51","52"],"import React, { useState, useEffect } from \"react\";\nimport db from \"../db\";\nimport Login from \"./Login\";\nimport Game from \"./Game\";\n\nconst LoginFunc = () => {\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    db.auth()\n      .signInWithEmailPassword(email, password)\n      .catch((err) => {\n        // eslint-disable-next-line default-case\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-passowrd\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n  const handleSignUp = () => {\n    clearErrors();\n    db.auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((err) => {\n        // eslint-disable-next-line default-case\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-passowrd\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n  const handleLogout = () => {\n    db.auth().signOut();\n  };\n\n  const authListener = () => {\n    db.auth().onAuthStateChanged((user) => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  });\n  return (\n    <div>\n      {/* {user ? (\n        <Game />\n      ) : ( */}\n      <Login\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        handleLogin={handleLogin}\n        handleSignUp={handleSignUp}\n        hasAccount={hasAccount}\n        emailError={emailError}\n        passwordError={passwordError}\n        setHasAccount={setHasAccount}\n      />\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default LoginFunc;\n","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/Google-Login.js",["53","54","55","56"],"import React, { useState, useEffect } from \"react\";\nimport db from \"../db\";\n\nconst GoogleLogin = () => {\n  const [isLogin, setIsLogin] = useState(false);\n  const [user, setUser] = useState(\"\");\n\n  const onSubmit = () => {\n    var provider = new db.auth.GoogleAuthProvider();\n    db.auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n        var token = credential.accessToken;\n        var user = result.user;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onLogout = () => {\n    db.auth().signOut();\n  };\n  useEffect(() => {\n    db.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setIsLogin(true);\n        setUser(user);\n      } else {\n        console.log(\"No User signed in!\");\n      }\n    });\n  });\n  return (\n    <div>\n      {!isLogin ? (\n        <button type=\"button\" className=\"googleBtn\" onClick={onSubmit}>\n          Login with Google!\n        </button>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default GoogleLogin;\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":10},{"ruleId":"61","severity":1,"message":"66","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":19},{"ruleId":"61","severity":1,"message":"67","line":50,"column":11,"nodeType":"63","messageId":"64","endLine":50,"endColumn":15},{"ruleId":"61","severity":1,"message":"62","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":12},{"ruleId":"61","severity":1,"message":"68","line":7,"column":10,"nodeType":"63","messageId":"64","endLine":7,"endColumn":14},{"ruleId":"61","severity":1,"message":"69","line":59,"column":9,"nodeType":"63","messageId":"64","endLine":59,"endColumn":21},{"ruleId":"61","severity":1,"message":"68","line":6,"column":10,"nodeType":"63","messageId":"64","endLine":6,"endColumn":14},{"ruleId":"61","severity":1,"message":"70","line":15,"column":13,"nodeType":"63","messageId":"64","endLine":15,"endColumn":18},{"ruleId":"61","severity":1,"message":"68","line":16,"column":13,"nodeType":"63","messageId":"64","endLine":16,"endColumn":17},{"ruleId":"61","severity":1,"message":"71","line":23,"column":9,"nodeType":"63","messageId":"64","endLine":23,"endColumn":17},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Game' is defined but never used.","Identifier","unusedVar","'db' is defined but never used.","'GoogleLogin' is defined but never used.","'self' is assigned a value but never used.","'user' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","'token' is assigned a value but never used.","'onLogout' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]