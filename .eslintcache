[{"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/index.js":"1","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/App.js":"2","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/ChatLobby.js":"3","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/Login/LoginFunctions.js":"4","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/Login/Google-Login.js":"5","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/game/index.js":"6","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/db.js":"7","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/Login/Login.js":"8","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/game/Game.js":"9","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/VideoChatContainer.js":"10","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/VideoChat.js":"11","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/modules/FirebaseModule.js":"12","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/modules/RTCModule.js":"13"},{"size":263,"mtime":1612129776360,"results":"14","hashOfConfig":"15"},{"size":1294,"mtime":1612137839595,"results":"16","hashOfConfig":"15"},{"size":6980,"mtime":1612137685576,"results":"17","hashOfConfig":"15"},{"size":2344,"mtime":1612130050415,"results":"18","hashOfConfig":"15"},{"size":1114,"mtime":1612130845568,"results":"19","hashOfConfig":"15"},{"size":31,"mtime":1612126006657,"results":"20","hashOfConfig":"15"},{"size":491,"mtime":1612136955201,"results":"21","hashOfConfig":"15"},{"size":1422,"mtime":1612134769273,"results":"22","hashOfConfig":"15"},{"size":8053,"mtime":1612126006656,"results":"23","hashOfConfig":"15"},{"size":3386,"mtime":1612137891887,"results":"24","hashOfConfig":"15"},{"size":2155,"mtime":1612137765882,"results":"25","hashOfConfig":"15"},{"size":1072,"mtime":1612133978078,"results":"26","hashOfConfig":"15"},{"size":2284,"mtime":1612134004313,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"bxzxn5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/index.js",[],["59","60"],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/App.js",["61","62","63","64"],"import React, { useState } from \"react\";\nimport Phaser from \"phaser\";\nimport { Game } from \"./game\";\nimport ChatLobby from \"./components/ChatLobby\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport \"./App.css\";\nimport Login from \"./Login/Login\";\nimport GoogleLogin from \"./Login/Google-Login\";\nimport VideoChatContainer from \"./components/VideoChatContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/video\">\n            <VideoChatContainer />\n          </Route>\n          <Route exact path=\"/chat\" component={ChatLobby} />\n          <Route exact path=\"/space/:id\">\n            <Space />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nfunction Home() {\n  // Basic Home Page\n  // React Hooks\n  const [spaceId, setSpaceId] = useState(\"\");\n  return (\n    <div>\n      <input\n        value={spaceId}\n        onChange={(event) => setSpaceId(event.target.value)}\n      />\n      <Link to={`/space/${spaceId}`}>Go to space</Link>\n    </div>\n  );\n}\n\nfunction Space() {\n  // We can use the `useParams` hook here to access\n  // the space id\n  let { id } = useParams();\n  return <Game spaceId={id} />;\n}\n\nexport default App;\n","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/ChatLobby.js",[],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/Login/LoginFunctions.js",["65","66","67"],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/Login/Google-Login.js",["68","69","70","71","72"],"import React, { useState, useEffect } from \"react\";\nimport db from \"../db\";\nimport firebase from \"firebase\";\nimport \"firebase/auth\";\n\nconst GoogleLogin = () => {\n  const [isLogin, setIsLogin] = useState(false);\n  const [user, setUser] = useState(\"\");\n\n  const onSubmit = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    db.auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n        var token = credential.accessToken;\n        var user = result.user;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onLogout = () => {\n    db.auth().signOut();\n  };\n  useEffect(() => {\n    db.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setIsLogin(true);\n        setUser(user);\n      } else {\n        console.log(\"No User signed in!\");\n      }\n    });\n  });\n  return (\n    <div>\n      <button type=\"button\" className=\"googleBtn\" onClick={onSubmit}>\n        Login with Google!\n      </button>\n    </div>\n  );\n};\n\nexport default GoogleLogin;\n","/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/game/index.js",[],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/db.js",[],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/Login/Login.js",[],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/game/Game.js",["73"],"import React from \"react\";\nimport Phaser from \"phaser\";\nimport io from \"socket.io-client\";\n\nexport class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.game = null;\n    this.spaceId = props.spaceId;\n    console.log(this.spaceId);\n\n    this.gameInit = this.gameInit.bind(this);\n    this.preload = this.preload.bind(this);\n    this.update = this.update.bind(this);\n    this.create = this.create.bind(this);\n    this.addPlayer = this.addPlayer.bind(this);\n    this.addOtherPlayers = this.addOtherPlayers.bind(this);\n\n    this.map = null;\n    this.cursors = null;\n    this.debugGraphics = null;\n    this.helpText = null;\n    this.player = null;\n    this.showDebug = false;\n    this.currentTileset = 1;\n  }\n\n  gameInit() {\n    var config = {\n      type: Phaser.WEBGL,\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"#2d2d2d\",\n      parent: \"phaser\",\n      pixelArt: true,\n      physics: {\n        default: \"arcade\",\n        arcade: { gravity: { y: 0 } },\n      },\n      scene: {\n        // Gets called by Phaser after init(). It is used to load assets\n        preload: this.preload(),\n        // Gets called by Phaser after init() and preload(). It is used to create your game objects\n        create: this.create(),\n        // Gets called by Phaser on each step or frame in the game\n        update: this.update(),\n      },\n    };\n\n    this.game = new Phaser.Game(config);\n  }\n\n  preload() {\n    // We store the Component's this to access it in the scene\n    const self = this;\n    return function () {\n      this.load.image(\"tiles\", \"/assets/catastrophi_tiles_16.png\");\n      this.load.image(\"tiles_red\", \"/assets/catastrophi_tiles_16_red.png\");\n      this.load.image(\"tiles_blue\", \"/assets/catastrophi_tiles_16_blue.png\");\n      this.load.tilemapCSV(\"map\", \"/assets/catastrophi_level2.csv\");\n      this.load.spritesheet(\"player\", \"/assets/spaceman.png\", {\n        frameWidth: 16,\n        frameHeight: 16,\n      });\n      this.load.spritesheet(\"player2\", \"/assets/spaceman.png\", {\n        frameWidth: 16,\n        frameHeight: 16,\n      });\n    };\n  }\n\n  addPlayer(scene, player, layer) {\n    this.player = scene.physics.add\n      .sprite(player.x, player.y, \"player\", 1)\n      .setScale(2);\n    this.player.setSize(10, 10, false);\n    scene.cameras.main.startFollow(this.player);\n    scene.physics.add.collider(this.player, layer);\n  }\n\n  addOtherPlayers(scene, player, layer) {\n    const newPlayer = scene.physics.add\n      .sprite(player.x, player.y, \"player\", 1)\n      .setScale(2);\n    newPlayer.setSize(10, 10, false);\n    scene.physics.add.collider(newPlayer, layer);\n    newPlayer.playerId = player.playerId;\n    scene.otherPlayers.add(newPlayer);\n  }\n\n  create() {\n    const self = this;\n    return function (data) {\n      function updateHelpText() {\n        self.helpText.setText(\n          \"WASD keys to move.\" +\n            \"\\nPress 1/2/3 to change the tileset texture.\" +\n            \"\\nCurrent texture: \" +\n            self.currentTileset\n        );\n      }\n\n      function drawDebug() {\n        self.debugGraphics.clear();\n\n        if (self.showDebug) {\n          // Pass in null for any of the style options to disable drawing that component\n          self.map.renderDebug(self.debugGraphics, {\n            tileColor: null, // Non-colliding tiles\n            collidingTileColor: new Phaser.Display.Color(243, 134, 48, 200), // Colliding tiles\n            faceColor: new Phaser.Display.Color(40, 39, 37, 255), // Colliding face edges\n          });\n        }\n\n        updateHelpText();\n      }\n\n      // When loading a CSV map, make sure to specify the tileWidth and tileHeight\n      self.map = this.make.tilemap({\n        key: \"map\",\n        tileWidth: 16,\n        tileHeight: 16,\n      });\n      var tileset = self.map.addTilesetImage(\"tiles_red\");\n      var layer = self.map.createLayer(0, tileset, 0, 0);\n      layer.setScale(2);\n\n      this.otherPlayers = this.physics.add.group();\n      this.socket = io({\n        query: {\n          spaceId: self.spaceId,\n        },\n      });\n      this.socket.on(\"currentPlayers\", (players) => {\n        console.log(players);\n        Object.keys(players).forEach((id) => {\n          if (players[id].playerId === this.socket.id) {\n            self.addPlayer(this, players[id], layer);\n          } else {\n            self.addOtherPlayers(this, players[id], layer);\n          }\n        });\n      });\n      this.socket.on(\"newPlayer\", (playerInfo) => {\n        self.addOtherPlayers(this, playerInfo, layer);\n      });\n      this.socket.on(\"userDisconnected\", (playerId) => {\n        this.otherPlayers.getChildren().forEach((otherPlayer) => {\n          if (playerId === otherPlayer.playerId) {\n            otherPlayer.destroy();\n          }\n        });\n      });\n      this.socket.on(\"playerMoved\", (playerInfo) => {\n        this.otherPlayers.getChildren().forEach((otherPlayer) => {\n          if (playerInfo.playerId === otherPlayer.playerId) {\n            otherPlayer.setRotation(playerInfo.rotation);\n            otherPlayer.setPosition(playerInfo.x, playerInfo.y);\n          }\n        });\n      });\n\n      //  This isn't totally accurate, but it'll do for now\n      self.map.setCollisionBetween(54, 83);\n\n      this.input.keyboard.on(\n        \"keydown-ONE\",\n        function (event) {\n          var texture = this.sys.textures.get(\"tiles_red\");\n          self.currentTileset = 1;\n          tileset.setImage(texture);\n          updateHelpText();\n        },\n        this\n      );\n\n      this.input.keyboard.on(\n        \"keydown-TWO\",\n        function (event) {\n          var texture = this.sys.textures.get(\"tiles_blue\");\n          self.currentTileset = 2;\n          tileset.setImage(texture);\n          updateHelpText();\n        },\n        this\n      );\n\n      this.input.keyboard.on(\n        \"keydown-THREE\",\n        function (event) {\n          var texture = this.sys.textures.get(\"tiles\");\n          self.currentTileset = 3;\n          tileset.setImage(texture);\n          updateHelpText();\n        },\n        this\n      );\n\n      this.cameras.main.setBounds(\n        0,\n        0,\n        self.map.widthInPixels,\n        self.map.heightInPixels\n      );\n\n      self.debugGraphics = this.add.graphics();\n\n      this.input.keyboard.on(\"down_67\", function (event) {\n        self.showDebug = !self.showDebug;\n        drawDebug();\n      });\n\n      self.cursors = this.input.keyboard.addKeys({\n        up: Phaser.Input.Keyboard.KeyCodes.W,\n        down: Phaser.Input.Keyboard.KeyCodes.S,\n        left: Phaser.Input.Keyboard.KeyCodes.A,\n        right: Phaser.Input.Keyboard.KeyCodes.D,\n      });\n\n      self.helpText = this.add.text(16, 16, \"\", {\n        fontSize: \"20px\",\n        fill: \"#ffffff\",\n      });\n      self.helpText.setScrollFactor(0);\n      updateHelpText();\n    };\n  }\n\n  update() {\n    const self = this;\n    return function (time, delta) {\n      const updatePlayer = () => {\n        self.player.body.setVelocity(0);\n\n        // Horizontal movement\n        if (self.cursors.left.isDown) {\n          self.player.body.setVelocityX(-200);\n        } else if (self.cursors.right.isDown) {\n          self.player.body.setVelocityX(200);\n        }\n        // Vertical movement\n        if (self.cursors.up.isDown) {\n          self.player.body.setVelocityY(-200);\n        } else if (self.cursors.down.isDown) {\n          self.player.body.setVelocityY(200);\n        }\n\n        // Emit our position to the socket.io server\n        const { x, y } = self.player;\n        if (self.player.oldPosition) {\n          if (\n            x !== self.player.oldPosition.x ||\n            y !== self.player.oldPosition.y\n          ) {\n            this.socket.emit(\"playerMovement\", {\n              x,\n              y,\n            });\n          }\n        }\n        self.player.oldPosition = {\n          x,\n          y,\n        };\n      };\n\n      self.player && updatePlayer();\n    };\n  }\n\n  componentDidMount() {\n    this.gameInit();\n  }\n\n  componentDidUpdate(prevState, prevProps) {}\n\n  render() {\n    // Phaser target element\n    return <div id=\"phaser\"></div>;\n  }\n}\n",["74","75"],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/VideoChatContainer.js",[],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/components/VideoChat.js",[],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/modules/FirebaseModule.js",[],"/Users/navyaramagiri/GHA-SrPhase/testing/Satellite-HQ/src/modules/RTCModule.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":14},{"ruleId":"80","severity":1,"message":"84","line":14,"column":8,"nodeType":"82","messageId":"83","endLine":14,"endColumn":13},{"ruleId":"80","severity":1,"message":"85","line":15,"column":8,"nodeType":"82","messageId":"83","endLine":15,"endColumn":19},{"ruleId":"80","severity":1,"message":"86","line":36,"column":10,"nodeType":"82","messageId":"83","endLine":36,"endColumn":14},{"ruleId":"80","severity":1,"message":"87","line":6,"column":10,"nodeType":"82","messageId":"83","endLine":6,"endColumn":14},{"ruleId":"80","severity":1,"message":"88","line":13,"column":9,"nodeType":"82","messageId":"83","endLine":13,"endColumn":20},{"ruleId":"80","severity":1,"message":"89","line":58,"column":9,"nodeType":"82","messageId":"83","endLine":58,"endColumn":21},{"ruleId":"80","severity":1,"message":"90","line":7,"column":10,"nodeType":"82","messageId":"83","endLine":7,"endColumn":17},{"ruleId":"80","severity":1,"message":"87","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":14},{"ruleId":"80","severity":1,"message":"91","line":17,"column":13,"nodeType":"82","messageId":"83","endLine":17,"endColumn":18},{"ruleId":"80","severity":1,"message":"87","line":18,"column":13,"nodeType":"82","messageId":"83","endLine":18,"endColumn":17},{"ruleId":"80","severity":1,"message":"92","line":25,"column":9,"nodeType":"82","messageId":"83","endLine":25,"endColumn":17},{"ruleId":"80","severity":1,"message":"93","line":55,"column":11,"nodeType":"82","messageId":"83","endLine":55,"endColumn":15},{"ruleId":"76","replacedBy":"94"},{"ruleId":"78","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Phaser' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'GoogleLogin' is defined but never used.","'Home' is defined but never used.","'user' is assigned a value but never used.","'clearInputs' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","'isLogin' is assigned a value but never used.","'token' is assigned a value but never used.","'onLogout' is assigned a value but never used.","'self' is assigned a value but never used.",["96"],["97"],"no-global-assign","no-unsafe-negation"]